{"version":3,"sources":["CardContainer.tsx"],"names":["EPSILON","CardContainer","index","active","closing","gesture","focused","getPreviousScene","getFocusedRoute","headerDarkContent","hasAbsoluteFloatHeader","headerHeight","onHeaderHeightChange","isParentHeaderShown","interpolationIndex","layout","onCloseRoute","onOpenRoute","onGestureCancel","onGestureEnd","onGestureStart","onTransitionEnd","onTransitionStart","renderHeader","renderScene","safeAreaInsetBottom","safeAreaInsetLeft","safeAreaInsetRight","safeAreaInsetTop","scene","parentHeaderHeight","React","useContext","HeaderHeightContext","onPageChangeStart","onPageChangeCancel","onPageChangeConfirm","useCallback","options","navigation","descriptor","isFocused","keyboardHandlingEnabled","handleOpen","route","handleClose","handleGestureBegin","handleGestureCanceled","handleGestureEnd","handleTransition","insets","top","right","bottom","left","colors","pointerEvents","setPointerEvents","useState","useEffect","listener","progress","next","addListener","value","removeListener","presentation","detachPreviousScreen","animationEnabled","cardOverlay","cardOverlayEnabled","cardShadowEnabled","cardStyle","cardStyleInterpolator","gestureDirection","gestureEnabled","gestureResponseDistance","gestureVelocityImpact","headerMode","headerShown","transitionSpec","isModalPresentation","forModalPresentationIOS","previousScene","backTitle","name","headerBack","useMemo","undefined","title","current","marginTop","backgroundColor","background","overflow","display","StyleSheet","absoluteFill","styles","container","mode","scenes","onContentHeightChange","memo","create","flex","flexDirection"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport { Animated, View, StyleSheet } from 'react-native';\nimport { Route, useTheme } from '@react-navigation/native';\nimport {\n  HeaderShownContext,\n  HeaderHeightContext,\n  HeaderBackContext,\n  getHeaderTitle,\n} from '@react-navigation/elements';\nimport type { Props as HeaderContainerProps } from '../Header/HeaderContainer';\nimport Card from './Card';\nimport { forModalPresentationIOS } from '../../TransitionConfigs/CardStyleInterpolators';\nimport ModalPresentationContext from '../../utils/ModalPresentationContext';\nimport useKeyboardManager from '../../utils/useKeyboardManager';\nimport type { Layout, Scene } from '../../types';\n\ntype Props = {\n  index: number;\n  interpolationIndex: number;\n  active: boolean;\n  focused: boolean;\n  closing: boolean;\n  layout: Layout;\n  gesture: Animated.Value;\n  scene: Scene;\n  headerDarkContent: boolean | undefined;\n  safeAreaInsetTop: number;\n  safeAreaInsetRight: number;\n  safeAreaInsetBottom: number;\n  safeAreaInsetLeft: number;\n  getPreviousScene: (props: { route: Route<string> }) => Scene | undefined;\n  getFocusedRoute: () => Route<string>;\n  renderHeader: (props: HeaderContainerProps) => React.ReactNode;\n  renderScene: (props: { route: Route<string> }) => React.ReactNode;\n  onOpenRoute: (props: { route: Route<string> }) => void;\n  onCloseRoute: (props: { route: Route<string> }) => void;\n  onTransitionStart?: (\n    props: { route: Route<string> },\n    closing: boolean\n  ) => void;\n  onTransitionEnd?: (props: { route: Route<string> }, closing: boolean) => void;\n  onGestureStart?: (props: { route: Route<string> }) => void;\n  onGestureEnd?: (props: { route: Route<string> }) => void;\n  onGestureCancel?: (props: { route: Route<string> }) => void;\n  hasAbsoluteFloatHeader: boolean;\n  headerHeight: number;\n  onHeaderHeightChange: (props: {\n    route: Route<string>;\n    height: number;\n  }) => void;\n  isParentHeaderShown: boolean;\n};\n\nconst EPSILON = 0.1;\n\nfunction CardContainer({\n  index,\n  active,\n  closing,\n  gesture,\n  focused,\n  getPreviousScene,\n  getFocusedRoute,\n  headerDarkContent,\n  hasAbsoluteFloatHeader,\n  headerHeight,\n  onHeaderHeightChange,\n  isParentHeaderShown,\n  interpolationIndex,\n  layout,\n  onCloseRoute,\n  onOpenRoute,\n  onGestureCancel,\n  onGestureEnd,\n  onGestureStart,\n  onTransitionEnd,\n  onTransitionStart,\n  renderHeader,\n  renderScene,\n  safeAreaInsetBottom,\n  safeAreaInsetLeft,\n  safeAreaInsetRight,\n  safeAreaInsetTop,\n  scene,\n}: Props) {\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const {\n    onPageChangeStart,\n    onPageChangeCancel,\n    onPageChangeConfirm,\n  } = useKeyboardManager(\n    React.useCallback(() => {\n      const { options, navigation } = scene.descriptor;\n\n      return (\n        navigation.isFocused() && options.keyboardHandlingEnabled !== false\n      );\n    }, [scene.descriptor])\n  );\n\n  const handleOpen = () => {\n    const { route } = scene.descriptor;\n\n    onTransitionEnd?.({ route }, false);\n    onOpenRoute({ route });\n  };\n\n  const handleClose = () => {\n    const { route } = scene.descriptor;\n\n    onTransitionEnd?.({ route }, true);\n    onCloseRoute({ route });\n  };\n\n  const handleGestureBegin = () => {\n    const { route } = scene.descriptor;\n\n    onPageChangeStart?.();\n    onGestureStart?.({ route });\n  };\n\n  const handleGestureCanceled = () => {\n    const { route } = scene.descriptor;\n\n    onPageChangeCancel?.();\n    onGestureCancel?.({ route });\n  };\n\n  const handleGestureEnd = () => {\n    const { route } = scene.descriptor;\n\n    onGestureEnd?.({ route });\n  };\n\n  const handleTransition = ({\n    closing,\n    gesture,\n  }: {\n    closing: boolean;\n    gesture: boolean;\n  }) => {\n    const { route } = scene.descriptor;\n\n    if (!gesture) {\n      onPageChangeConfirm?.(true);\n    } else if (active && closing) {\n      onPageChangeConfirm?.(false);\n    } else {\n      onPageChangeCancel?.();\n    }\n\n    onTransitionStart?.({ route }, closing);\n  };\n\n  const insets = {\n    top: safeAreaInsetTop,\n    right: safeAreaInsetRight,\n    bottom: safeAreaInsetBottom,\n    left: safeAreaInsetLeft,\n  };\n\n  const { colors } = useTheme();\n\n  const [pointerEvents, setPointerEvents] = React.useState<'box-none' | 'none'>(\n    'box-none'\n  );\n\n  React.useEffect(() => {\n    const listener = scene.progress.next?.addListener?.(\n      ({ value }: { value: number }) => {\n        setPointerEvents(value <= EPSILON ? 'box-none' : 'none');\n      }\n    );\n\n    return () => {\n      if (listener) {\n        scene.progress.next?.removeListener?.(listener);\n      }\n    };\n  }, [pointerEvents, scene.progress.next]);\n\n  const {\n    presentation,\n    detachPreviousScreen,\n    animationEnabled,\n    cardOverlay,\n    cardOverlayEnabled,\n    cardShadowEnabled,\n    cardStyle,\n    cardStyleInterpolator,\n    gestureDirection,\n    gestureEnabled,\n    gestureResponseDistance,\n    gestureVelocityImpact,\n    headerMode,\n    headerShown,\n    transitionSpec,\n  } = scene.descriptor.options;\n\n  const isModalPresentation = cardStyleInterpolator === forModalPresentationIOS;\n  const previousScene = getPreviousScene({ route: scene.descriptor.route });\n\n  let backTitle: string | undefined;\n\n  if (previousScene) {\n    const { options, route } = previousScene.descriptor;\n\n    backTitle = getHeaderTitle(options, route.name);\n  }\n\n  const headerBack = React.useMemo(\n    () => (backTitle !== undefined ? { title: backTitle } : undefined),\n    [backTitle]\n  );\n\n  return (\n    <Card\n      interpolationIndex={interpolationIndex}\n      gestureDirection={gestureDirection}\n      layout={layout}\n      insets={insets}\n      gesture={gesture}\n      current={scene.progress.current}\n      next={scene.progress.next}\n      closing={closing}\n      onOpen={handleOpen}\n      onClose={handleClose}\n      overlay={cardOverlay}\n      overlayEnabled={cardOverlayEnabled}\n      shadowEnabled={cardShadowEnabled}\n      onTransition={handleTransition}\n      onGestureBegin={handleGestureBegin}\n      onGestureCanceled={handleGestureCanceled}\n      onGestureEnd={handleGestureEnd}\n      gestureEnabled={index === 0 ? false : gestureEnabled}\n      gestureResponseDistance={gestureResponseDistance}\n      gestureVelocityImpact={gestureVelocityImpact}\n      transitionSpec={transitionSpec}\n      styleInterpolator={cardStyleInterpolator}\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      pointerEvents={active ? 'box-none' : pointerEvents}\n      pageOverflowEnabled={headerMode !== 'float' && presentation !== 'modal'}\n      headerDarkContent={headerDarkContent}\n      containerStyle={\n        hasAbsoluteFloatHeader && headerMode !== 'screen'\n          ? { marginTop: headerHeight }\n          : null\n      }\n      contentStyle={[{ backgroundColor: colors.background }, cardStyle]}\n      style={[\n        {\n          // This is necessary to avoid unfocused larger pages increasing scroll area\n          // The issue can be seen on the web when a smaller screen is pushed over a larger one\n          overflow: active ? undefined : 'hidden',\n          display:\n            // Hide unfocused screens when animation isn't enabled\n            // This is also necessary for a11y on web\n            animationEnabled === false &&\n            detachPreviousScreen !== false &&\n            presentation !== 'modal' &&\n            !focused\n              ? 'none'\n              : 'flex',\n        },\n        StyleSheet.absoluteFill,\n      ]}\n    >\n      <View style={styles.container}>\n        <View style={styles.scene}>\n          <HeaderBackContext.Provider value={headerBack}>\n            <HeaderShownContext.Provider\n              value={isParentHeaderShown || headerShown !== false}\n            >\n              <HeaderHeightContext.Provider\n                value={headerShown ? headerHeight : parentHeaderHeight}\n              >\n                {renderScene({ route: scene.descriptor.route })}\n              </HeaderHeightContext.Provider>\n            </HeaderShownContext.Provider>\n          </HeaderBackContext.Provider>\n        </View>\n        {headerMode !== 'float' ? (\n          <ModalPresentationContext.Provider\n            value={isModalPresentation && interpolationIndex !== 0}\n          >\n            {renderHeader({\n              mode: 'screen',\n              layout,\n              scenes: [previousScene, scene],\n              getPreviousScene,\n              getFocusedRoute,\n              onContentHeightChange: onHeaderHeightChange,\n            })}\n          </ModalPresentationContext.Provider>\n        ) : null}\n      </View>\n    </Card>\n  );\n}\n\nexport default React.memo(CardContainer);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  scene: {\n    flex: 1,\n  },\n});\n"]}