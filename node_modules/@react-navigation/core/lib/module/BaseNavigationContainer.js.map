{"version":3,"sources":["BaseNavigationContainer.tsx"],"names":["React","CommonActions","EnsureSingleNavigator","UnhandledActionContext","NavigationBuilderContext","NavigationStateContext","NavigationRouteContext","NavigationContext","ScheduleUpdateContext","useChildListeners","useKeyedChildListeners","useOptionsGetters","useEventEmitter","useSyncState","checkSerializable","checkDuplicateRouteNames","findFocusedRoute","NOT_INITIALIZED_ERROR","serializableWarnings","duplicateNameWarnings","Object","defineProperty","global","set","_","console","warn","e","getPartialState","state","undefined","key","routeNames","partialState","stale","routes","map","route","BaseNavigationContainer","forwardRef","initialState","onStateChange","onUnhandledAction","independent","children","ref","parent","useContext","isDefault","Error","getState","setState","scheduleUpdate","flushUpdates","isFirstMountRef","useRef","navigatorKeyRef","getKey","useCallback","current","setKey","listeners","addListener","keyedListeners","addKeyedListener","dispatch","action","focus","error","navigation","canGoBack","result","handled","resetRoot","target","root","reset","getRootState","getCurrentRoute","emitter","addOptionsGetter","getCurrentOptions","useImperativeHandle","keys","reduce","acc","name","args","create","getParent","isReady","onDispatchAction","noop","emit","type","data","lastEmittedOptionsRef","onOptionsChange","options","builderContext","useMemo","scheduleContext","isInitialRef","getIsInitial","context","onStateChangeRef","useEffect","hydratedState","process","env","NODE_ENV","serializableResult","serializable","location","reason","path","pointer","params","i","length","curr","prev","test","JSON","stringify","message","includes","push","duplicateRouteNamesResult","locations","join","defaultOnUnhandledAction","payload","element"],"mappings":"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","sourcesContent":["import * as React from 'react';\nimport {\n  CommonActions,\n  Route,\n  NavigationState,\n  InitialState,\n  PartialState,\n  NavigationAction,\n  ParamListBase,\n} from '@react-navigation/routers';\nimport EnsureSingleNavigator from './EnsureSingleNavigator';\nimport UnhandledActionContext from './UnhandledActionContext';\nimport NavigationBuilderContext from './NavigationBuilderContext';\nimport NavigationStateContext from './NavigationStateContext';\nimport NavigationRouteContext from './NavigationRouteContext';\nimport NavigationContext from './NavigationContext';\nimport { ScheduleUpdateContext } from './useScheduleUpdate';\nimport useChildListeners from './useChildListeners';\nimport useKeyedChildListeners from './useKeyedChildListeners';\nimport useOptionsGetters from './useOptionsGetters';\nimport useEventEmitter from './useEventEmitter';\nimport useSyncState from './useSyncState';\nimport checkSerializable from './checkSerializable';\nimport checkDuplicateRouteNames from './checkDuplicateRouteNames';\nimport findFocusedRoute from './findFocusedRoute';\nimport { NOT_INITIALIZED_ERROR } from './createNavigationContainerRef';\nimport type {\n  NavigationContainerEventMap,\n  NavigationContainerRef,\n  NavigationContainerProps,\n} from './types';\n\ntype State = NavigationState | PartialState<NavigationState> | undefined;\n\nconst serializableWarnings: string[] = [];\nconst duplicateNameWarnings: string[] = [];\n\ntry {\n  /**\n   * Migration instructions for removal of devtools from core\n   */\n  Object.defineProperty(\n    global,\n    'REACT_NAVIGATION_REDUX_DEVTOOLS_EXTENSION_INTEGRATION_ENABLED',\n    {\n      set(_) {\n        console.warn(\n          \"Redux devtools extension integration can be enabled with the '@react-navigation/devtools' package. For more details, see https://reactnavigation.org/docs/devtools\"\n        );\n      },\n    }\n  );\n} catch (e) {\n  // Ignore\n}\n\n/**\n * Remove `key` and `routeNames` from the state objects recursively to get partial state.\n *\n * @param state Initial state object.\n */\nconst getPartialState = (\n  state: InitialState | undefined\n): PartialState<NavigationState> | undefined => {\n  if (state === undefined) {\n    return;\n  }\n\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n  const { key, routeNames, ...partialState } = state;\n\n  return {\n    ...partialState,\n    stale: true,\n    routes: state.routes.map((route) => {\n      if (route.state === undefined) {\n        return route as Route<string> & {\n          state?: PartialState<NavigationState>;\n        };\n      }\n\n      return { ...route, state: getPartialState(route.state) };\n    }),\n  };\n};\n\n/**\n * Container component which holds the navigation state.\n * This should be rendered at the root wrapping the whole app.\n *\n * @param props.initialState Initial state object for the navigation tree.\n * @param props.onStateChange Callback which is called with the latest navigation state when it changes.\n * @param props.children Child elements to render the content.\n * @param props.ref Ref object which refers to the navigation object containing helper methods.\n */\nconst BaseNavigationContainer = React.forwardRef(\n  function BaseNavigationContainer(\n    {\n      initialState,\n      onStateChange,\n      onUnhandledAction,\n      independent,\n      children,\n    }: NavigationContainerProps,\n    ref?: React.Ref<NavigationContainerRef<ParamListBase>>\n  ) {\n    const parent = React.useContext(NavigationStateContext);\n\n    if (!parent.isDefault && !independent) {\n      throw new Error(\n        \"Looks like you have nested a 'NavigationContainer' inside another. Normally you need only one container at the root of the app, so this was probably an error. If this was intentional, pass 'independent={true}' explicitly. Note that this will make the child navigators disconnected from the parent and you won't be able to navigate between them.\"\n      );\n    }\n\n    const [\n      state,\n      getState,\n      setState,\n      scheduleUpdate,\n      flushUpdates,\n    ] = useSyncState<State>(() =>\n      getPartialState(initialState == null ? undefined : initialState)\n    );\n\n    const isFirstMountRef = React.useRef<boolean>(true);\n\n    const navigatorKeyRef = React.useRef<string | undefined>();\n\n    const getKey = React.useCallback(() => navigatorKeyRef.current, []);\n\n    const setKey = React.useCallback((key: string) => {\n      navigatorKeyRef.current = key;\n    }, []);\n\n    const { listeners, addListener } = useChildListeners();\n\n    const { keyedListeners, addKeyedListener } = useKeyedChildListeners();\n\n    const dispatch = (\n      action: NavigationAction | ((state: NavigationState) => NavigationAction)\n    ) => {\n      if (listeners.focus[0] == null) {\n        console.error(NOT_INITIALIZED_ERROR);\n      } else {\n        listeners.focus[0]((navigation) => navigation.dispatch(action));\n      }\n    };\n\n    const canGoBack = () => {\n      if (listeners.focus[0] == null) {\n        return false;\n      }\n\n      const { result, handled } = listeners.focus[0]((navigation) =>\n        navigation.canGoBack()\n      );\n\n      if (handled) {\n        return result;\n      } else {\n        return false;\n      }\n    };\n\n    const resetRoot = React.useCallback(\n      (state?: PartialState<NavigationState> | NavigationState) => {\n        const target = state?.key ?? keyedListeners.getState.root?.().key;\n\n        if (target == null) {\n          console.error(NOT_INITIALIZED_ERROR);\n        } else {\n          listeners.focus[0]((navigation) =>\n            navigation.dispatch({\n              ...CommonActions.reset(state),\n              target,\n            })\n          );\n        }\n      },\n      [keyedListeners.getState, listeners.focus]\n    );\n\n    const getRootState = React.useCallback(() => {\n      return keyedListeners.getState.root?.();\n    }, [keyedListeners.getState]);\n\n    const getCurrentRoute = React.useCallback(() => {\n      const state = getRootState();\n\n      if (state == null) {\n        return undefined;\n      }\n\n      const route = findFocusedRoute(state);\n\n      return route as Route<string> | undefined;\n    }, [getRootState]);\n\n    const emitter = useEventEmitter<NavigationContainerEventMap>();\n\n    const { addOptionsGetter, getCurrentOptions } = useOptionsGetters({});\n\n    React.useImperativeHandle(ref, () => ({\n      ...Object.keys(CommonActions).reduce<any>((acc, name) => {\n        acc[name] = (...args: any[]) =>\n          // @ts-expect-error: this is ok\n          dispatch(CommonActions[name](...args));\n        return acc;\n      }, {}),\n      ...emitter.create('root'),\n      resetRoot,\n      dispatch,\n      canGoBack,\n      getRootState,\n      getState: () => state,\n      getParent: () => undefined,\n      getCurrentRoute,\n      getCurrentOptions,\n      isReady: () => listeners.focus[0] != null,\n    }));\n\n    const onDispatchAction = React.useCallback(\n      (action: NavigationAction, noop: boolean) => {\n        emitter.emit({ type: '__unsafe_action__', data: { action, noop } });\n      },\n      [emitter]\n    );\n\n    const lastEmittedOptionsRef = React.useRef<object | undefined>();\n\n    const onOptionsChange = React.useCallback(\n      (options) => {\n        if (lastEmittedOptionsRef.current === options) {\n          return;\n        }\n\n        lastEmittedOptionsRef.current = options;\n\n        emitter.emit({\n          type: 'options',\n          data: { options },\n        });\n      },\n      [emitter]\n    );\n\n    const builderContext = React.useMemo(\n      () => ({\n        addListener,\n        addKeyedListener,\n        onDispatchAction,\n        onOptionsChange,\n      }),\n      [addListener, addKeyedListener, onDispatchAction, onOptionsChange]\n    );\n\n    const scheduleContext = React.useMemo(\n      () => ({ scheduleUpdate, flushUpdates }),\n      [scheduleUpdate, flushUpdates]\n    );\n\n    const isInitialRef = React.useRef(true);\n\n    const getIsInitial = React.useCallback(() => isInitialRef.current, []);\n\n    const context = React.useMemo(\n      () => ({\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      }),\n      [\n        state,\n        getState,\n        setState,\n        getKey,\n        setKey,\n        getIsInitial,\n        addOptionsGetter,\n      ]\n    );\n\n    const onStateChangeRef = React.useRef(onStateChange);\n\n    React.useEffect(() => {\n      isInitialRef.current = false;\n      onStateChangeRef.current = onStateChange;\n    });\n\n    React.useEffect(() => {\n      const hydratedState = getRootState();\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (hydratedState !== undefined) {\n          const serializableResult = checkSerializable(hydratedState);\n\n          if (!serializableResult.serializable) {\n            const { location, reason } = serializableResult;\n\n            let path = '';\n            let pointer: Record<any, any> = hydratedState;\n            let params = false;\n\n            for (let i = 0; i < location.length; i++) {\n              const curr = location[i];\n              const prev = location[i - 1];\n\n              pointer = pointer[curr];\n\n              if (!params && curr === 'state') {\n                continue;\n              } else if (!params && curr === 'routes') {\n                if (path) {\n                  path += ' > ';\n                }\n              } else if (\n                !params &&\n                typeof curr === 'number' &&\n                prev === 'routes'\n              ) {\n                path += pointer?.name;\n              } else if (!params) {\n                path += ` > ${curr}`;\n                params = true;\n              } else {\n                if (typeof curr === 'number' || /^[0-9]+$/.test(curr)) {\n                  path += `[${curr}]`;\n                } else if (/^[a-z$_]+$/i.test(curr)) {\n                  path += `.${curr}`;\n                } else {\n                  path += `[${JSON.stringify(curr)}]`;\n                }\n              }\n            }\n\n            const message = `Non-serializable values were found in the navigation state. Check:\\n\\n${path} (${reason})\\n\\nThis can break usage such as persisting and restoring state. This might happen if you passed non-serializable values such as function, class instances etc. in params. If you need to use components with callbacks in your options, you can use 'navigation.setOptions' instead. See https://reactnavigation.org/docs/troubleshooting#i-get-the-warning-non-serializable-values-were-found-in-the-navigation-state for more details.`;\n\n            if (!serializableWarnings.includes(message)) {\n              serializableWarnings.push(message);\n              console.warn(message);\n            }\n          }\n\n          const duplicateRouteNamesResult = checkDuplicateRouteNames(\n            hydratedState\n          );\n\n          if (duplicateRouteNamesResult.length) {\n            const message = `Found screens with the same name nested inside one another. Check:\\n${duplicateRouteNamesResult.map(\n              (locations) => `\\n${locations.join(', ')}`\n            )}\\n\\nThis can cause confusing behavior during navigation. Consider using unique names for each screen instead.`;\n\n            if (!duplicateNameWarnings.includes(message)) {\n              duplicateNameWarnings.push(message);\n              console.warn(message);\n            }\n          }\n        }\n      }\n\n      emitter.emit({ type: 'state', data: { state } });\n\n      if (!isFirstMountRef.current && onStateChangeRef.current) {\n        onStateChangeRef.current(hydratedState);\n      }\n\n      isFirstMountRef.current = false;\n    }, [getRootState, emitter, state]);\n\n    const defaultOnUnhandledAction = React.useCallback(\n      (action: NavigationAction) => {\n        if (process.env.NODE_ENV === 'production') {\n          return;\n        }\n\n        const payload: Record<string, any> | undefined = action.payload;\n\n        let message = `The action '${action.type}'${\n          payload ? ` with payload ${JSON.stringify(action.payload)}` : ''\n        } was not handled by any navigator.`;\n\n        switch (action.type) {\n          case 'NAVIGATE':\n          case 'PUSH':\n          case 'REPLACE':\n          case 'JUMP_TO':\n            if (payload?.name) {\n              message += `\\n\\nDo you have a screen named '${payload.name}'?\\n\\nIf you're trying to navigate to a screen in a nested navigator, see https://reactnavigation.org/docs/nesting-navigators#navigating-to-a-screen-in-a-nested-navigator.`;\n            } else {\n              message += `\\n\\nYou need to pass the name of the screen to navigate to.\\n\\nSee https://reactnavigation.org/docs/navigation-actions for usage.`;\n            }\n\n            break;\n          case 'GO_BACK':\n          case 'POP':\n          case 'POP_TO_TOP':\n            message += `\\n\\nIs there any screen to go back to?`;\n            break;\n          case 'OPEN_DRAWER':\n          case 'CLOSE_DRAWER':\n          case 'TOGGLE_DRAWER':\n            message += `\\n\\nIs your screen inside a Drawer navigator?`;\n            break;\n        }\n\n        message += `\\n\\nThis is a development-only warning and won't be shown in production.`;\n\n        console.error(message);\n      },\n      []\n    );\n\n    let element = (\n      <ScheduleUpdateContext.Provider value={scheduleContext}>\n        <NavigationBuilderContext.Provider value={builderContext}>\n          <NavigationStateContext.Provider value={context}>\n            <UnhandledActionContext.Provider\n              value={onUnhandledAction ?? defaultOnUnhandledAction}\n            >\n              <EnsureSingleNavigator>{children}</EnsureSingleNavigator>\n            </UnhandledActionContext.Provider>\n          </NavigationStateContext.Provider>\n        </NavigationBuilderContext.Provider>\n      </ScheduleUpdateContext.Provider>\n    );\n\n    if (independent) {\n      // We need to clear any existing contexts for nested independent container to work correctly\n      element = (\n        <NavigationRouteContext.Provider value={undefined}>\n          <NavigationContext.Provider value={undefined}>\n            {element}\n          </NavigationContext.Provider>\n        </NavigationRouteContext.Provider>\n      );\n    }\n\n    return element;\n  }\n);\n\nexport default BaseNavigationContainer;\n"]}