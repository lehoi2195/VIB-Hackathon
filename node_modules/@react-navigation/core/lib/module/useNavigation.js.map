{"version":3,"sources":["useNavigation.tsx"],"names":["React","NavigationContext","useNavigation","navigation","useContext","undefined","Error"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;;AAGA;AACA;AACA;AACA;AACA;AACA,eAAe,SAASC,aAAT,GAER;AACL,QAAMC,UAAU,GAAGH,KAAK,CAACI,UAAN,CAAiBH,iBAAjB,CAAnB;;AAEA,MAAIE,UAAU,KAAKE,SAAnB,EAA8B;AAC5B,UAAM,IAAIC,KAAJ,CACJ,sFADI,CAAN;AAGD,GAPI,CASL;;;AACA,SAAQH,UAAR;AACD","sourcesContent":["import * as React from 'react';\nimport NavigationContext from './NavigationContext';\nimport type { NavigationProp } from './types';\n\n/**\n * Hook to access the navigation prop of the parent screen anywhere.\n *\n * @returns Navigation prop of the parent screen.\n */\nexport default function useNavigation<\n  T = NavigationProp<ReactNavigation.RootParamList>\n>(): T {\n  const navigation = React.useContext(NavigationContext);\n\n  if (navigation === undefined) {\n    throw new Error(\n      \"Couldn't find a navigation object. Is your component inside a screen in a navigator?\"\n    );\n  }\n\n  // FIXME: Figure out a better way to do this\n  return (navigation as unknown) as T;\n}\n"]}