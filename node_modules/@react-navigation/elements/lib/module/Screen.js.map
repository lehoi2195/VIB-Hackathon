{"version":3,"sources":["Screen.tsx"],"names":["React","View","StyleSheet","useSafeAreaFrame","useSafeAreaInsets","NavigationContext","NavigationRouteContext","Background","HeaderShownContext","HeaderHeightContext","getDefaultHeaderHeight","Screen","props","dimensions","insets","isParentHeaderShown","useContext","parentHeaderHeight","focused","header","headerShown","headerStatusBarHeight","top","navigation","route","children","style","headerHeight","setHeaderHeight","useState","styles","container","content","e","height","nativeEvent","layout","create","flex","flexDirection"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,IAAT,EAAeC,UAAf,QAAuD,cAAvD;AACA,SACEC,gBADF,EAEEC,iBAFF,QAGO,gCAHP;AAIA,SACEC,iBADF,EAEEC,sBAFF,QAMO,0BANP;AAQA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,OAAOC,mBAAP,MAAgC,8BAAhC;AACA,OAAOC,sBAAP,MAAmC,iCAAnC;AAaA,eAAe,SAASC,MAAT,CAAgBC,KAAhB,EAA8B;AAC3C,QAAMC,UAAU,GAAGV,gBAAgB,EAAnC;AACA,QAAMW,MAAM,GAAGV,iBAAiB,EAAhC;AAEA,QAAMW,mBAAmB,GAAGf,KAAK,CAACgB,UAAN,CAAiBR,kBAAjB,CAA5B;AACA,QAAMS,kBAAkB,GAAGjB,KAAK,CAACgB,UAAN,CAAiBP,mBAAjB,CAA3B;AAEA,QAAM;AACJS,IAAAA,OADI;AAEJC,IAAAA,MAFI;AAGJC,IAAAA,WAAW,GAAG,IAHV;AAIJC,IAAAA,qBAAqB,GAAGN,mBAAmB,GAAG,CAAH,GAAOD,MAAM,CAACQ,GAJrD;AAKJC,IAAAA,UALI;AAMJC,IAAAA,KANI;AAOJC,IAAAA,QAPI;AAQJC,IAAAA;AARI,MASFd,KATJ;AAWA,QAAM,CAACe,YAAD,EAAeC,eAAf,IAAkC5B,KAAK,CAAC6B,QAAN,CAAe,MACrDnB,sBAAsB,CAACG,UAAD,EAAaQ,qBAAb,CADgB,CAAxC;AAIA,sBACE,oBAAC,UAAD;AACE,IAAA,2BAA2B,EAAE,CAACH,OADhC;AAEE,IAAA,yBAAyB,EAAEA,OAAO,GAAG,MAAH,GAAY,qBAFhD;AAGE,IAAA,KAAK,EAAE,CAACY,MAAM,CAACC,SAAR,EAAmBL,KAAnB;AAHT,kBAKE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEI,MAAM,CAACE;AAApB,kBACE,oBAAC,kBAAD,CAAoB,QAApB;AACE,IAAA,KAAK,EAAEjB,mBAAmB,IAAIK,WAAW,KAAK;AADhD,kBAGE,oBAAC,mBAAD,CAAqB,QAArB;AACE,IAAA,KAAK,EAAEA,WAAW,GAAGO,YAAH,GAAkBV;AADtC,KAGGQ,QAHH,CAHF,CADF,CALF,EAgBGL,WAAW,gBACV,oBAAC,iBAAD,CAAmB,QAAnB;AAA4B,IAAA,KAAK,EAAEG;AAAnC,kBACE,oBAAC,sBAAD,CAAwB,QAAxB;AAAiC,IAAA,KAAK,EAAEC;AAAxC,kBACE,oBAAC,IAAD;AACE,IAAA,QAAQ,EAAGS,CAAD,IAAO;AACf,YAAM;AAAEC,QAAAA;AAAF,UAAaD,CAAC,CAACE,WAAF,CAAcC,MAAjC;AAEAR,MAAAA,eAAe,CAACM,MAAD,CAAf;AACD;AALH,KAOGf,MAPH,CADF,CADF,CADU,GAcR,IA9BN,CADF;AAkCD;AAED,MAAMW,MAAM,GAAG5B,UAAU,CAACmC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,aAAa,EAAE;AAFN,GADoB;AAK/B;AACAP,EAAAA,OAAO,EAAE;AACPM,IAAAA,IAAI,EAAE;AADC;AANsB,CAAlB,CAAf","sourcesContent":["import * as React from 'react';\nimport { View, StyleSheet, StyleProp, ViewStyle } from 'react-native';\nimport {\n  useSafeAreaFrame,\n  useSafeAreaInsets,\n} from 'react-native-safe-area-context';\nimport {\n  NavigationContext,\n  NavigationRouteContext,\n  NavigationProp,\n  RouteProp,\n  ParamListBase,\n} from '@react-navigation/native';\n\nimport Background from './Background';\nimport HeaderShownContext from './Header/HeaderShownContext';\nimport HeaderHeightContext from './Header/HeaderHeightContext';\nimport getDefaultHeaderHeight from './Header/getDefaultHeaderHeight';\n\ntype Props = {\n  focused: boolean;\n  navigation: NavigationProp<ParamListBase>;\n  route: RouteProp<ParamListBase>;\n  header: React.ReactNode;\n  headerShown?: boolean;\n  headerStatusBarHeight?: number;\n  style?: StyleProp<ViewStyle>;\n  children: React.ReactNode;\n};\n\nexport default function Screen(props: Props) {\n  const dimensions = useSafeAreaFrame();\n  const insets = useSafeAreaInsets();\n\n  const isParentHeaderShown = React.useContext(HeaderShownContext);\n  const parentHeaderHeight = React.useContext(HeaderHeightContext);\n\n  const {\n    focused,\n    header,\n    headerShown = true,\n    headerStatusBarHeight = isParentHeaderShown ? 0 : insets.top,\n    navigation,\n    route,\n    children,\n    style,\n  } = props;\n\n  const [headerHeight, setHeaderHeight] = React.useState(() =>\n    getDefaultHeaderHeight(dimensions, headerStatusBarHeight)\n  );\n\n  return (\n    <Background\n      accessibilityElementsHidden={!focused}\n      importantForAccessibility={focused ? 'auto' : 'no-hide-descendants'}\n      style={[styles.container, style]}\n    >\n      <View style={styles.content}>\n        <HeaderShownContext.Provider\n          value={isParentHeaderShown || headerShown !== false}\n        >\n          <HeaderHeightContext.Provider\n            value={headerShown ? headerHeight : parentHeaderHeight}\n          >\n            {children}\n          </HeaderHeightContext.Provider>\n        </HeaderShownContext.Provider>\n      </View>\n      {headerShown ? (\n        <NavigationContext.Provider value={navigation}>\n          <NavigationRouteContext.Provider value={route}>\n            <View\n              onLayout={(e) => {\n                const { height } = e.nativeEvent.layout;\n\n                setHeaderHeight(height);\n              }}\n            >\n              {header}\n            </View>\n          </NavigationRouteContext.Provider>\n        </NavigationContext.Provider>\n      ) : null}\n    </Background>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    flexDirection: 'column-reverse',\n  },\n  // This is necessary to avoid applying 'column-reverse' to screen content\n  content: {\n    flex: 1,\n  },\n});\n"]}